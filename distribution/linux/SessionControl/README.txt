# Session Control 

Утилита для мониторинга активности браузера и завершения неактивных сессий.
Работает в качестве службы systemd - с заданной периодичностью определяет 
наличие процессов и получает данные из истории заданного браузера. При наличии 
активных процессов и отстутсвия изменений в истории, сессия признается неактивной,
а пользователь получает уведомление. Если пользователь не реагирует на 
уведомление в течение заданного времени, сессия завершается.
__________________________________________________________________________________

Данное руководство поддерживает markdown-разметку и для удобства чтения может
быть открыто в любом md-редакторе (переименовать README.txt -> README.md)


## Порядок использования 

1) из директории ```/путь/до/директории/SessionControl``` запустить файл установщик:

```
./INSTALL
```

2) Убедиться в создании рабочей директории службы:

/etc/SessionControl/    
|_ controller.py    
|_ py_adapter    
|_ session.conf    
|_ session.log    

Если после установки директория ```/etc/SessionControl/``` не создана или в ней
отсутствуют указанные файлы, рекомендуется:

* При отсутствии директории или файлов ```controller.py```, ```py_adapter``` - удалить все содержимое ```/etc/SessionControl/``` 
и повторить процесс установки
* При отсутствии файлов ```session.log```, ```session.conf``` - создать их самостоятельно; файл ```session.log``` оставить пустым, а ```session.conf``` отредактировать согласно инструкции в п.(3)

Проверить наличие в директории ```/etc/systemd/system/``` файла ```sessioncontrol.service```
При отсутствии повторить процесс установки. 

В случае если приведенные рекомендации не привели к успешной установке, 
для трассировки и исправления ошибок следует открыть файл ```INSTALL``` в 
текстовом редакторе и поочередно выполнять его составные команды.

3) (при необходимости) изменить настройки конфигурационного файла ```/etc/SessionControl/session.conf```
Пример конфигурационного файла приведен далее.

4) После каждого изменения конфигурационного файла **необходимо** перезапустить службу:

```
sudo systemctl restart sessioncontrol
```

## Файловая структура

./SessionControl/    
|_ tools    
|  |_ session.conf    
|  |_ controller.py    
|  |_ py_adapter    
|  |_ sessioncontrol.service    
|_ INSTALL    
|_ README.txt    

#### INSTALL

Shell-скрипт установщик:
- Создает директорию ```/etc/SessionControl/```
- Добавляет в нее файлы ```session.conf```, ```controller.py```, py_adapter
- Создает файл ```session.log```
- Устанавливает права на чтение и запись для каталога ```/etc/SessionControl/```
- Добавляет файл ```sessioncontrol.service``` в директорию служб systemd
- Перезагружает ```systemd``` и запускает службу ```sessioncontrol```

Файл открывается любым текстовым редактором, внутри есть комментарии

#### session.conf

Конфигурационный файл службы
Пример:

```
BROWSER=firefox
ITERATION_TIMEOUT=20
DELAY=10
USER=user
```

* BROWSER - тип используемого браузера (firefox/yandex/chrome)
* ITERATION_TIMEOUT - время ожидания между итерациями проверки (в секундах)
* DELAY - время ожидания реакции пользователя после вывода предпреждения (в секундах)
* USER - имя локального пользователя ПК

Правила синтаксиса:
- Праметры указываются в формате "ПРАМЕТР=значение"
- Название парметра заглавными буквами
- Разделитель "=" не отделятся пробелами

В случае ошибки в конфигурационном файле служба при запуске выдаст 
предупреждение "Ошибка конфигурационного файла" и продолжит работу 
с параметрами по умолчанию (указаны в примере).

#### controller.py

Python-скрипт реализующий основной функционал службы 
(подробное описание в комментариях к коду)

#### py_adapter

Shell-скрипт выполняющий запуск ```controller.py``` и экспортирующий 
системную переменную $DISPLAY для вызова GUI внутри службы. Вызывается непосредственно
службой

#### sessioncontrol.service

Файл службы, определяющий порядок ее работы.
Осуществляет вызов:

```
systemd -> sessioncontrol.service -> py_adapter -> controller.py
```
